#version: "3.8"
#
#services:
#
#  mysql:
#    image: mysql:latest
#    container_name: mysql-db
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#      MYSQL_DATABASE: userdb1
#      MYSQL_USER: myuser
#      MYSQL_PASSWORD: mypassword
#    ports:
#      - "3333:3306"
#    volumes:
#      - mysql-data:/var/lib/mysql
#    networks:
#      - backend
#
#  rabbitmq:
#    image: rabbitmq:3-management
#    container_name: rabbitmq
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    environment:
#      RABBITMQ_DEFAULT_USER: guest
#      RABBITMQ_DEFAULT_PASS: guest
#    networks:
#      - backend
#
#  user-service-1:
#    image: user-service:latest
#    container_name: user-service-1
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/userdb1
#      SPRING_DATASOURCE_USERNAME: myuser
#      SPRING_DATASOURCE_PASSWORD: mypassword
#      SPRING_RABBITMQ_HOST: rabbitmq
#      SPRING_RABBITMQ_PORT: 5672
#    ports:
#      - "8081:8080"
#    depends_on:
#      - mysql
#      - rabbitmq
#    networks:
#      - backend
#
#  user-service-2:
#    image: user-service:latest
#    container_name: user-service-2
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/userdb1
#      SPRING_DATASOURCE_USERNAME: myuser
#      SPRING_DATASOURCE_PASSWORD: mypassword
#      SPRING_RABBITMQ_HOST: rabbitmq
#      SPRING_RABBITMQ_PORT: 5672
#    ports:
#      - "8082:8080"
#    depends_on:
#      - mysql
#      - rabbitmq
#    networks:
#      - backend
#
#  notification-service:
#    image: notification-service:latest
#    container_name: notification-service
#    environment:
#      SPRING_RABBITMQ_HOST: rabbitmq
#      SPRING_RABBITMQ_PORT: 5672
#    ports:
#      - "8090:8080"
#    depends_on:
#      - rabbitmq
#    networks:
#      - backend
#
#  nginx:
#    image: nginx:latest
#    container_name: nginx-lb
#    ports:
#      - "8080:80"
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#    depends_on:
#      - user-service-1
#      - user-service-2
#    networks:
#      - backend
#
#volumes:
#  mysql-data:
#
#networks:
#  backend:

version: "3.8"

services:

  mysql:
    image: mysql:latest
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: userdb1
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
    ports:
      - "3333:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend

  user-service-1:
    image: user-service:latest
    container_name: user-service-1
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/userdb1
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: mypassword
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
    volumes:
      - ./logs/user-service-1:/logs
    command: sh -c "java -jar /app/user-service.jar > /logs/app.log 2>&1"
#    The Java application writes logs to /logs/app.log in the container ➝ this gets stored in your local file system at ./logs/user-service-1/app.log.
    ports:
      - "8081:8080"
    depends_on:
      - mysql
      - rabbitmq
    networks:
      - backend

  user-service-2:
    image: user-service:latest
    container_name: user-service-2
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/userdb1
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: mypassword
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
    volumes:
      - ./logs/user-service-2:/logs
    command: sh -c "java -jar /app/user-service.jar > /logs/app.log 2>&1"
    ports:
      - "8082:8080"
    depends_on:
      - mysql
      - rabbitmq
    networks:
      - backend

  notification-service:
    image: notification-service:latest
    container_name: notification-service
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
    volumes:
      - ./logs/notification-service:/logs
    command: sh -c "java -jar /app/notification-service.jar > /logs/app.log 2>&1"
    ports:
      - "8090:8080"
    depends_on:
      - rabbitmq
    networks:
      - backend

  nginx:
    image: nginx:latest
    container_name: nginx-lb
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - user-service-1
      - user-service-2
    networks:
      - backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - backend

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.0
    container_name: logstash
    volumes:
      - ./elk/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logs:/var/log/microservices
      # - log-data:/var/log/microservices  and in volume add volumes:
      #  mysql-data:
      #  log-data:
    depends_on:
      - elasticsearch
    networks:
      - backend

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - backend

volumes:
  mysql-data:

networks:
  backend:
